{"title":"Github Pages+Hexo个人博客协作","uid":"52853fe0be6fcca34138515b6234395e","slug":"Github-Pages-Hexo个人博客协作","date":"2022-08-24T08:31:09.000Z","updated":"2022-08-24T10:09:15.601Z","comments":true,"path":"api/articles/Github-Pages-Hexo个人博客协作.json","keywords":null,"cover":null,"content":"<p>下面将分享多设备之间进行个人博客维护的步骤，能够随时随地都能在不同的终端里面完成协作</p>\n<h3 id=\"1-创建协作分支\"><a href=\"#1-创建协作分支\" class=\"headerlink\" title=\"1. 创建协作分支\"></a>1. 创建协作分支</h3><p>由于 <code>hexo</code>  通过命令部署到 <code>github</code> 仓库的文件均为静态网页文件，仅用于 <code>github pages</code> 的展示，因此上传的分支是不包括配置文件上传的，需要重新创建一个新的分支，用于元数据的上传。</p>\n<ul>\n<li>在 <code>github</code> 的博客仓库创建新的分支</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git checkout -b 分支名称 #创建并切换至对应的分支<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>创建完分支后，把整个分支的代码都拉到本地里面</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git clone -b &lt;分支名称&gt; &lt;仓库地址&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"2-生成协作项目\"><a href=\"#2-生成协作项目\" class=\"headerlink\" title=\"2. 生成协作项目\"></a>2. 生成协作项目</h3><p>创建好分支以后，需要把原本在本地的 <code>hexo</code> 项目的配置文件复制到创建好的 <code>git</code> 项目中，并对 <code>hexo</code> 项目进行初始化</p>\n<ul>\n<li>复制本地项目的配置文件</li>\n</ul>\n<p>下面是需要复制的文件结构</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">.</span> <span class=\"token comment\"># Hexo 项目根目录.</span>\n├─ _config.yml <span class=\"token comment\"># Hexo 配置文件.</span>\n├─ _config.aurora.yml <span class=\"token comment\"># Hexo Aurora 主题配置文件</span>\n├─ package.json <span class=\"token comment\"># npm 已安装目录文件</span>\n├─ _source <span class=\"token comment\"># 文章等静态资源</span>\n├─ scaffolds <span class=\"token comment\">#</span>\n└─ _config.aurora.yml <span class=\"token comment\"># 主题配置.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>复制完成后，安装所需要的插件</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>安装完插件以后，即可使用 <code>hexo</code> 的命令对项目进行初始化</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo cl &amp; hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>初始化完成后即可按照正常的 <code>git</code> 项目进行代码协作了</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git add . \ngit commit - m &quot;first commit&quot;\ngit push origin &lt;分支名称&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>搭建完成后，原来本地的项目可以删除了，只需要使用新建的项目进行 <code>hexo</code> 的初始化，以及 <code>git</code> 代码上传即可，这样就可以实现在不同设备间进行协作</p></blockquote>\n<h3 id=\"3-博客协作\"><a href=\"#3-博客协作\" class=\"headerlink\" title=\"3. 博客协作\"></a>3. 博客协作</h3><p>搭建完成以后，协作就很简单了，只需简单的操作 <code>git</code> 命令，即可无缝衔接博客维护</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git clone -b &lt;分支名称&gt; &lt;仓库地址&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>克隆完项目以后即可继续维护博客了</p>\n","feature":true,"text":"下面将分享多设备之间进行个人博客维护的步骤，能够随时随地都能在不同的终端里面完成协作 1. 创建协作分支由于 hexo 通过命令部署到 github 仓库的文件均为静态网页文件，仅用于 github pages 的展示，因此上传的分支是不包括配置文件上传的，需要重新创建一个新的分...","link":"","photos":[],"count_time":{"symbolsCount":944,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":2,"path":"api/tags/Hexo.json"},{"name":"Github Pages","slug":"Github-Pages","count":2,"path":"api/tags/Github-Pages.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E5%8D%8F%E4%BD%9C%E5%88%86%E6%94%AF\"><span class=\"toc-text\">1. 创建协作分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%94%9F%E6%88%90%E5%8D%8F%E4%BD%9C%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2. 生成协作项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%8D%9A%E5%AE%A2%E5%8D%8F%E4%BD%9C\"><span class=\"toc-text\">3. 博客协作</span></a></li></ol>","author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"MarkDown 语法","uid":"25aedc3dbb7bb7b3e9ea75d87387e23e","slug":"MarkDown-语法","date":"2022-08-16T10:01:40.000Z","updated":"2022-08-23T10:44:43.747Z","comments":true,"path":"api/articles/MarkDown-语法.json","keywords":null,"cover":[],"text":"MD 语法总结MD即为MarkDown，MarkDown能够使文章更具有可读性，MarkDown的底层实际上是把内容转化为HTML的富文本展示格式，使文章的内容更加具有层次，结构更加清晰。 1. 标题# H1 ## H2 ### H3 #### H4 ##### H5 #####...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"MarkDown","slug":"MarkDown","count":1,"path":"api/tags/MarkDown.json"},{"name":"MD","slug":"MD","count":1,"path":"api/tags/MD.json"}],"author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}