{"title":"Github Pages + Hexo 个人博客搭建分享","uid":"cc25b2c3a520c09e3610684adbe1fa97","slug":"Github-Pages-Hexo-个人博客搭建分享","date":"2022-08-16T09:11:11.000Z","updated":"2022-08-23T08:05:31.000Z","comments":true,"path":"api/articles/Github-Pages-Hexo-个人博客搭建分享.json","keywords":null,"cover":[],"content":"<p><strong>本文将给大家分享个人博客搭建的详细步骤，以及搭建过程中踩到的坑，希望能够帮助大家快速搭建自己的博客，能够记录开发过程中遇到的问题和总结出的经验。</strong></p>\n<p><em>博主选的是 Github Pages + Hexo + Aurora主题，如果是自己有时间和兴趣去写动态网页的博客，需要自己购买服务器和域名比较麻烦，还是比较推荐直接用现成静态网页去做比较好，省时省力也省钱，也能满足绝大部分功能了</em></p>\n<p><strong>准备工作:</strong> <em>Node.js  Git 搭建博客依赖的环境</em></p>\n<p><em>Hexo Doc: <a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></em></p>\n<h3 id=\"1-站点选型\"><a href=\"#1-站点选型\" class=\"headerlink\" title=\"1.  站点选型\"></a>1.  站点选型</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Github Pages</p></blockquote>\n<p>​        由于Github是国外站点，没有梯子时不时都会抽风，但Github有个好处是申请Github Pages不需要上传自己身份证信息(我就是因为太懒不想上传哈哈)，如果不想折腾，能接受有时候蜗牛一样的访问速度，推荐使用Github Pages。下面是Github Pages的整合步骤。</p>\n<ol>\n<li>创建 Github 仓库</li>\n</ol>\n<p><img src=\"./2022-08-16-Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/github%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA.jpg\" alt=\"创建仓库\"></p>\n<p>看网上大部分文章都说仓库名命名如果是 {github用户名}.github.io ，仓库就会自动开启 github pages，仓库名直接用github用户名好像也可以(可以试试)，这样访问github pages的时候域名直接就可以用 {github用户名}.github.io 访问，否则就要在域名后面加上仓库名称才能访问自己的博客</p>\n<ol start=\"2\">\n<li>设置 github pages</li>\n</ol>\n<p><img src=\"./2022-08-16-Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/gitpage%E9%A1%B5%E9%9D%A2.jpg\" alt=\"设置\"></p>\n<ul>\n<li><p>如果是用用户名创建了仓库，直接访问上述的域名即可，如果是自己有申请独立域名，可以在下方的 Custom domain设置自定义域名</p>\n</li>\n<li><p>同时可以选择自己编译后的静态网页部署在哪个分支，可以在 Branch 选项设置分支，以及保存的根目录路径</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Gitee Pages</p></blockquote>\n<p>​        Gitee Pages 其实和 Github Pages 的区别不大，博主本来也是打算用 Gitee 来搭建的，但是之前没有现成的身份证正反面以及手持身份证的照片，就没选择这种方式。</p>\n<ol>\n<li>创建 Gitee 仓库</li>\n</ol>\n<p><img src=\"./2022-08-16-Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/gitee%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA.jpg\" alt=\"创建仓库\"></p>\n<p>和 Github 一样，以用户名作为仓库的名称，创建一个存放静态网页文件的仓库</p>\n<ol start=\"2\">\n<li>开启 Gitee Pages 功能</li>\n</ol>\n<p>在 <em>服务</em> 菜单里面开启 Gitee Page 功能，如果之前没有做过实名认证，是需要上传身份证资料的，根据自己的情况选择是不是要上传，不实名认证是无法开启这个功能的</p>\n<p><img src=\"./2022-08-16-Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81.jpg\" alt=\"实名认证\"></p>\n<hr>\n<h3 id=\"2-Hexo\"><a href=\"#2-Hexo\" class=\"headerlink\" title=\"2. Hexo\"></a>2. Hexo</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>安装步骤</p></blockquote>\n<p><em>Hexo</em> 利用 <em>Node.js</em> 和  <em>NPM</em> 安装比较方便，在安装前需前往 <em>Node.js</em> 官网先安装好环境，同时需要安装 <em>Git</em></p>\n<h4 id=\"2-1-npm-安装-Hexo\"><a href=\"#2-1-npm-安装-Hexo\" class=\"headerlink\" title=\"2.1 npm 安装 Hexo\"></a>2.1 npm 安装 Hexo</h4><p>在自己的项目目录里面创建一个文件夹用来保存 Hexo 项目，安装好 Node npm 和 Git 环境后，执行安装命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行完成后可以执行命令查看版本，执行看到有 <em>hexo-cli</em> 的版本号就说明成功安装了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装 <em>hexo git</em> 的插件</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>初始化 hexo 项目，后面上传的文件夹就是初始化后的目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init <span class=\"token operator\">&lt;</span>要创建的目录名称<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入到刚才创建的项目目录里面,安装所有依赖的包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装完成后，可以看到目录结构如下图</p>\n<p><img src=\"./2022-08-16-Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.jpg\" alt=\"目录结构\"></p>\n<p>执行以下 hexo 的命令，即可在本地生成静态网页文件并运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#清空hexo所有已经生成的静态网页文件，如果修改了 yaml 配置文件一定要先执行此命令清空</span>\nhexo clean \n<span class=\"token comment\">#也可以简写成</span>\nhexo cl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完清理命令后，需要执行生成静态网页文件的命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#生成静态网页文件</span>\nhexo generate\n<span class=\"token comment\">#也可以简写成</span>\nhexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>生成完成后，可以现在本地运行，运行成功后访问 <a href=\"https://localhost:4000/\">https://localhost:4000</a> 访问本地博客，也可以指定运行的端口，看自己需求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#不指定端口运行，默认4000端口启动</span>\nhexo server\n<span class=\"token comment\">#也可以简写成</span>\nhexo s\n<span class=\"token comment\">#如果需要指定端口，则执行以下命令</span>\nhexo server -p <span class=\"token number\">8000</span>\n<span class=\"token comment\">#简写也是可以的</span>\nhexo s -p <span class=\"token number\">8000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2-主题安装\"><a href=\"#2-2-主题安装\" class=\"headerlink\" title=\"2.2 主题安装\"></a>2.2 主题安装</h4><p>默认的主题是真的很默认，可以自行到 Hexo 官网的主题库中挑选自己喜欢的主题，我选的是三钻的 Aurora 主题，能用 npm 安装而且有自己的主题文档，十分方便，而且确实很好看，第一眼就被吸引了。</p>\n<p><em>Hexo 主题库: <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></em></p>\n<p><em>Aurora Doc</em>: <a href=\"https://aurora.tridiamond.tech/zh/guide/\">https://aurora.tridiamond.tech/zh/guide/</a></p>\n<p>下面我以 Aurora 为例安装主题，可能有部分主题不支持 npm 安装，需要手动保存文件夹再做处理，具体可以根据选择的主题文档完成安装操作</p>\n<ol>\n<li>在控制台中，进入 Hexo 项目的根目录，执行主题安装命令</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-theme-aurora --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个 <code>_config.aurora.yml</code> 配置文件来配置主题</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#命令 windows powershell 不支持，需自行在 下面的路径中找到文件后直接复制</span>\n<span class=\"token function\">cp</span> -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>设置<em>permalink</em></li>\n</ol>\n","text":"本文将给大家分享个人博客搭建的详细步骤，以及搭建过程中踩到的坑，希望能够帮助大家快速搭建自己的博客，能够记录开发过程中遇到的问题和总结出的经验。 博主选的是 Github Pages + Hexo + Aurora主题，如果是自己有时间和兴趣去写动态网页的博客，需要自己购买服务器...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"},{"name":"Github Pages","slug":"Github-Pages","count":1,"path":"api/tags/Github-Pages.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%AB%99%E7%82%B9%E9%80%89%E5%9E%8B\"><span class=\"toc-text\">1.  站点选型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Hexo\"><span class=\"toc-text\">2. Hexo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-npm-%E5%AE%89%E8%A3%85-Hexo\"><span class=\"toc-text\">2.1 npm 安装 Hexo</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.2 主题安装</span></a></li></ol></li></ol>","author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MarkDown 语法","uid":"25aedc3dbb7bb7b3e9ea75d87387e23e","slug":"MarkDown-语法","date":"2022-08-16T10:01:40.000Z","updated":"2022-08-16T12:05:42.897Z","comments":true,"path":"api/articles/MarkDown-语法.json","keywords":null,"cover":[],"text":"MD 语法总结MD即为MarkDown，MarkDown能够使文章更具有可读性，MarkDown的底层实际上是把内容转化为HTML的富文本展示格式，使文章的内容更加具有层次，结构更加清晰。 1. 标题# H1 ## H2 ### H3 #### H4 ##### H5 #####...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"MarkDown","slug":"MarkDown","count":1,"path":"api/tags/MarkDown.json"},{"name":"MD","slug":"MD","count":1,"path":"api/tags/MD.json"}],"author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}