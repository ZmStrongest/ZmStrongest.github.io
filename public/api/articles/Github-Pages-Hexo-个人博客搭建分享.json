{"title":"Github Pages + Hexo 个人博客搭建分享","uid":"cc25b2c3a520c09e3610684adbe1fa97","slug":"Github-Pages-Hexo-个人博客搭建分享","date":"2022-08-16T09:11:11.000Z","updated":"2022-08-24T09:36:56.038Z","comments":true,"path":"api/articles/Github-Pages-Hexo-个人博客搭建分享.json","keywords":null,"cover":[],"content":"<p><strong>本文将给大家分享个人博客搭建的详细步骤，以及搭建过程中踩到的坑，希望能够帮助大家快速搭建自己的博客，能够记录开发过程中遇到的问题和总结出的经验。</strong></p>\n<p><em>博主选的是 Github Pages + Hexo + Aurora主题，如果是自己有时间和兴趣去写动态网页的博客，需要自己购买服务器和域名比较麻烦，还是比较推荐直接用现成静态网页去做比较好，省时省力也省钱，也能满足绝大部分功能了</em></p>\n<p><strong>准备工作:</strong> <em>Node.js  Git 搭建博客依赖的环境</em></p>\n<p><em>Hexo Doc: <a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></em></p>\n<h3 id=\"1-站点选型\"><a href=\"#1-站点选型\" class=\"headerlink\" title=\"1.  站点选型\"></a>1.  站点选型</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Github Pages</p></blockquote>\n<p>​        由于Github是国外站点，没有梯子时不时都会抽风，但Github有个好处是申请Github Pages不需要上传自己身份证信息(我就是因为太懒不想上传哈哈)，如果不想折腾，能接受有时候蜗牛一样的访问速度，推荐使用Github Pages。下面是Github Pages的整合步骤。</p>\n<ol>\n<li>创建 Github 仓库</li>\n</ol>\n<p><img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/github%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA.jpg\" alt=\"创建仓库\"></p>\n<p>看网上大部分文章都说仓库名命名如果是 {github用户名}.github.io ，仓库就会自动开启 github pages，仓库名直接用github用户名好像也可以(可以试试)，这样访问github pages的时候域名直接就可以用 {github用户名}.github.io 访问，否则就要在域名后面加上仓库名称才能访问自己的博客</p>\n<ol start=\"2\">\n<li>设置 github pages</li>\n</ol>\n<p><img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/gitpage%E9%A1%B5%E9%9D%A2.jpg\" alt=\"设置\"></p>\n<ul>\n<li><p>如果是用用户名创建了仓库，直接访问上述的域名即可，如果是自己有申请独立域名，可以在下方的 Custom domain设置自定义域名</p>\n</li>\n<li><p>同时可以选择自己编译后的静态网页部署在哪个分支，可以在 Branch 选项设置分支，以及保存的根目录路径</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Gitee Pages</p></blockquote>\n<p>​        Gitee Pages 其实和 Github Pages 的区别不大，博主本来也是打算用 Gitee 来搭建的，但是之前没有现成的身份证正反面以及手持身份证的照片，就没选择这种方式。</p>\n<ol>\n<li>创建 Gitee 仓库</li>\n</ol>\n<p><img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/gitee%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA.jpg\" alt=\"创建仓库\"></p>\n<p>和 Github 一样，以用户名作为仓库的名称，创建一个存放静态网页文件的仓库</p>\n<ol start=\"2\">\n<li>开启 Gitee Pages 功能</li>\n</ol>\n<p>在 <em>服务</em> 菜单里面开启 Gitee Page 功能，如果之前没有做过实名认证，是需要上传身份证资料的，根据自己的情况选择是不是要上传，不实名认证是无法开启这个功能的</p>\n<p><img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81.jpg\" alt=\"实名认证\"></p>\n<hr>\n<h3 id=\"2-Hexo\"><a href=\"#2-Hexo\" class=\"headerlink\" title=\"2. Hexo\"></a>2. Hexo</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>安装步骤</p></blockquote>\n<p><em>Hexo</em> 利用 <em>Node.js</em> 和  <em>NPM</em> 安装比较方便，在安装前需前往 <em>Node.js</em> 官网先安装好环境，同时需要安装 <em>Git</em></p>\n<h4 id=\"2-1-npm-安装-Hexo\"><a href=\"#2-1-npm-安装-Hexo\" class=\"headerlink\" title=\"2.1 npm 安装 Hexo\"></a>2.1 npm 安装 Hexo</h4><p>在自己的项目目录里面创建一个文件夹用来保存 Hexo 项目，安装好 Node npm 和 Git 环境后，执行安装命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行完成后可以执行命令查看版本，执行看到有 <em>hexo-cli</em> 的版本号就说明成功安装了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装 <em>hexo git</em> 的插件</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>安装 hexo-asset-image 插件，如果不安装此插件，文章引入的图片将无法正常显示</strong></p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install hexo-asset-image --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>初始化 hexo 项目，后面上传的文件夹就是初始化后的目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init <span class=\"token operator\">&lt;</span>要创建的目录名称<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入到刚才创建的项目目录里面,安装所有依赖的包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装完成后，可以看到目录结构如下图</p>\n<img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/目录结构.jpg\" alt=\"目录结构\" style=\"zoom:50%;\">\n\n<p>执行以下 hexo 的命令，即可在本地生成静态网页文件并运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#清空hexo所有已经生成的静态网页文件，如果修改了 yaml 配置文件一定要先执行此命令清空</span>\nhexo clean \n<span class=\"token comment\">#也可以简写成</span>\nhexo cl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完清理命令后，需要执行生成静态网页文件的命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#生成静态网页文件</span>\nhexo generate\n<span class=\"token comment\">#也可以简写成</span>\nhexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>生成完成后，可以现在本地运行，运行成功后访问 <a href=\"https://localhost:4000/\">https://localhost:4000</a> 访问本地博客，也可以指定运行的端口，看自己需求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#不指定端口运行，默认4000端口启动</span>\nhexo server\n<span class=\"token comment\">#也可以简写成</span>\nhexo s\n<span class=\"token comment\">#如果需要指定端口，则执行以下命令</span>\nhexo server -p <span class=\"token number\">8000</span>\n<span class=\"token comment\">#简写也是可以的</span>\nhexo s -p <span class=\"token number\">8000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2-主题安装\"><a href=\"#2-2-主题安装\" class=\"headerlink\" title=\"2.2 主题安装\"></a>2.2 主题安装</h4><p>默认的主题是真的很默认，可以自行到 Hexo 官网的主题库中挑选自己喜欢的主题，我选的是三钻的 Aurora 主题，能用 npm 安装而且有自己的主题文档，十分方便，而且确实很好看，第一眼就被吸引了。</p>\n<p><em>Hexo 主题库: <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></em></p>\n<p><em>Aurora Doc</em>: <a href=\"https://aurora.tridiamond.tech/zh/guide/\">https://aurora.tridiamond.tech/zh/guide/</a></p>\n<p>下面我以 Aurora 为例安装主题，可能有部分主题不支持 npm 安装，需要手动保存文件夹再做处理，具体可以根据选择的主题文档完成安装操作</p>\n<ol>\n<li>在控制台中，进入 Hexo 项目的根目录，执行主题安装命令</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-theme-aurora --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个 <code>_config.aurora.yml</code> 配置文件来配置主题</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#命令 windows powershell 不支持，需自行在 下面的路径中找到文件后直接复制</span>\n<span class=\"token function\">cp</span> -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>设置 <em>permalink</em></li>\n</ol>\n<p>因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与我们 Vue router 中的 path 是不相符的，那么就会出现无法访问的问题。所以我们需要修改 Hexo 默认配置文件里面的 <code>permalink</code> 参数。</p>\n<ul>\n<li><p>打开 Hexo 根目录下的 <code>_config.yml</code></p>\n</li>\n<li><p>修改 <em>permalink</em> 参数为  <code>/post/:title.html</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//tridiamond.tech\n<span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> /post/<span class=\"token punctuation\">:</span>title.html <span class=\"token comment\">#更改这个参数</span>\n<span class=\"token key atrule\">permalink_defaults</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">pretty_urls</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">trailing_index</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># Set to false to remove trailing 'index.html' from permalinks</span>\n  <span class=\"token key atrule\">trailing_html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># Set to false to remove trailing '.html' from permalinks</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>设置代码高亮</p>\n</li>\n</ul>\n<p>最后主题是使用 <code>Prismjs</code> 来实现代码高亮显示，但 Hexo 默认是使用 <code>highlightjs</code>，因此你需要更改 Hexo 配置来使用 <code>Prismjs</code></p>\n<ol>\n<li><p>把 <code>highlight</code> 的启用改为<code>false</code></p>\n</li>\n<li><p>把 <code>prismjs</code> 的启用改为<code>true</code></p>\n</li>\n<li><p>把 <code>prismjs</code> 下的 <code>preprocess</code> 改为 <code>false</code></p>\n</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\">#第一步</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token key atrule\">wrap</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">hljs</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#第二部</span>\n  <span class=\"token key atrule\">preprocess</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#第三部</span>\n  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>_config.yaml</code> 修改主题配置</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Extensions</span>\n<span class=\"token comment\">## Plugins: https://hexo.io/plugins/</span>\n<span class=\"token comment\">## Themes: https://hexo.io/themes/</span>\n<span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> Aurora <span class=\"token comment\">#改成 Aurora 主题</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-创建-“About”-页面\"><a href=\"#2-3-创建-“About”-页面\" class=\"headerlink\" title=\"2.3 创建 “About” 页面\"></a>2.3 创建 “About” 页面</h4><p>主题默认开启了 <code>about</code> 页面，所以我们需要创建这个 about 页，要不主题就无法正常显示 about 页。</p>\n<p>要创建这个默认的 about 页，文档里面写的那个命令执行不了，不知道是不是版本问题，执行下面这个 <code>Hexo 的命令</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo create page about <span class=\"token comment\">#主题文档写的这个我执行不了，提示无此命令</span>\n\nhexo new page about <span class=\"token comment\">#执行这个，新建页面布局about</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完毕后，你会发现在 <code>source/</code> 文件中多处了一个新的文件夹：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">.</span>\n└── <span class=\"token builtin class-name\">source</span>\n    └── about\n        └── index.md<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>你可以随意修改这个 <code>index.md</code> markdown 文件中的内容，此文件的内容将会现在在我们的 about 页面中。</p>\n<ul>\n<li><strong>由于无法执行文档中 create page 的命令，因此还需要多加一步，否则跳转到 About 页面后点击刷新，是会出现访问404的情况(new pages是hexo的命令，上面的命令估计是作者封装的，那几个默认页面的原理应该也是读取的type参数)</strong></li>\n</ul>\n<p>找到 <code>_source/about/index.md</code>，在文件头上面增加一个<code>type</code>参数，表示它是一个跳转页面，这样就不会出现刷新404的情况了。</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 关于\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2022-08-15 18:28:35</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> about <span class=\"token comment\">#增加这个参数</span></span>\n<span class=\"token punctuation\">---</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>不增加的效果:</p>\n<img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/about错误页面.jpg\" alt=\"不加参数\" style=\"zoom:50%;\">\n\n<p>增加后的效果:</p>\n<img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/about正确页面.jpg\" alt=\"加参数\" style=\"zoom:50%;\">\n\n\n\n<h4 id=\"2-4-重新生成与本地服务器\"><a href=\"#2-4-重新生成与本地服务器\" class=\"headerlink\" title=\"2.4 重新生成与本地服务器\"></a>2.4 重新生成与本地服务器</h4><p><strong>使用以下命令来运行本地环境,改变了任何配置都需要重新生成 Hexo 的静态文件！</strong> </p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo clean &amp; hexo g &amp; hexo s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当文件都生成完毕之后，就可以通过 <a href=\"https://localhost:4000/\">https://localhost:4000</a> 访问你的博客了。</p>\n<hr>\n<h3 id=\"3-Github-Page-部署配置\"><a href=\"#3-Github-Page-部署配置\" class=\"headerlink\" title=\"3. Github Page 部署配置\"></a>3. Github Page 部署配置</h3><h4 id=\"3-1-配置文件\"><a href=\"#3-1-配置文件\" class=\"headerlink\" title=\"3.1 配置文件\"></a>3.1 配置文件</h4><p>一共有两个配置文件，一个是 <strong>Hexo 自身</strong>的配置，一个是<strong>主题专用</strong>的配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">.</span> <span class=\"token comment\"># Hexo 项目根目录.</span>\n├─ _config.yml <span class=\"token comment\"># Hexo 配置文件.</span>\n└─ _config.aurora.yml <span class=\"token comment\"># 主题配置.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意</p>\n<p>大部分主题的功能都是使用主题配置文件的，但是有部分需要用到 Hexo 插件的就需要在 Hexo 的配置中修改。</p></blockquote>\n<h4 id=\"3-2-基础配置\"><a href=\"#3-2-基础配置\" class=\"headerlink\" title=\"3.2 基础配置\"></a>3.2 基础配置</h4><p>我们可以使用 主题文件<code>_config.aurora.yml</code>中的<code>site</code>参数来设置我们博客的主要信息和配置。</p>\n<p><code>site</code> 配置拥有以下选项：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">选项</th>\n<th align=\"center\">接受类型</th>\n<th>使用说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>subtitle</code></td>\n<td align=\"center\">String</td>\n<td>博客自标题，页面主标题后面会跟随这个标题内容。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>author</code></td>\n<td align=\"center\">String</td>\n<td>博客作者名字，或者是博客名字。会在 <strong>header 的 logo 区域</strong>显示，也会在<strong>博客简介</strong>中显示。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>nick</code></td>\n<td align=\"center\">String</td>\n<td>博客子名字，会在 header 的 logo 下方显示。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>description</code></td>\n<td align=\"center\">String</td>\n<td>会在博客简介中显示，用几句话描述博主相关信息（支持 HTML 标签）</td>\n</tr>\n<tr>\n<td align=\"center\"><code>language</code></td>\n<td align=\"center\">en, cn</td>\n<td>配置默认博客语言，en 是英文，cn 是中文。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>multi_language</code></td>\n<td align=\"center\">true, false</td>\n<td>开启博客的多语言支持</td>\n</tr>\n<tr>\n<td align=\"center\"><code>logo</code></td>\n<td align=\"center\">String</td>\n<td>Logo 的图片链接 image.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>avatar</code></td>\n<td align=\"center\">String</td>\n<td>头像的图片链接 image.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>beian</code></td>\n<td align=\"center\">Object</td>\n<td>网站备案信息 (从版本 1.1.0 开始，这个配置拥有两个属性)</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">site</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">subtitle</span><span class=\"token punctuation\">:</span> Mins's Blog \n  <span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> Mins <span class=\"token comment\">#此参数将显示在左上角的logo</span>\n  <span class=\"token key atrule\">nick</span><span class=\"token punctuation\">:</span> blog\t<span class=\"token comment\">#此参数将显示在左上角的logo</span>\n  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> /image/avatar.jpeg\t<span class=\"token comment\">#显示头像</span>\n  <span class=\"token key atrule\">link</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//zmstrongest.github.io <span class=\"token comment\">#博客首页地址</span>\n  <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Think like an artist, code like an artisan.'</span> <span class=\"token comment\">#显示在头像下方的个人简介</span>\n  <span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> cn \n  <span class=\"token key atrule\">multi_language</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//img<span class=\"token punctuation\">-</span>blog.csdnimg.cn/20210313122054101.png\n  <span class=\"token comment\">#avatar: https://img-blog.csdnimg.cn/20210313122054101.png</span>\n  <span class=\"token key atrule\">beian</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token key atrule\">link</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token key atrule\">police_beian</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token key atrule\">link</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-3-社交配置\"><a href=\"#3-3-社交配置\" class=\"headerlink\" title=\"3.3 社交配置\"></a>3.3 社交配置</h4><p>这部分用于配置我们的社交链接，这些链接会在我们的简介中显示。</p>\n<p>社交配置会有以下配置项：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">配置项</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>github</code></td>\n<td align=\"left\">Github 简介页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>twitter</code></td>\n<td align=\"left\">Twitter 个人页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>stackoverflow</code></td>\n<td align=\"left\">Stackoverflow 个人页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>weibo</code></td>\n<td align=\"left\">微博个人页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>zhihu</code></td>\n<td align=\"left\">知乎简介页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>csdn</code></td>\n<td align=\"left\">CSDN 简介页链接.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>juejin</code></td>\n<td align=\"left\">掘金简介页链接.</td>\n</tr>\n</tbody></table>\n<p>配置例子：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">socials</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//zmstrongest.github.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果上面作者提供的自带博客类型不能满足你的需求，想自定义图标和连接，请自行查看 <a href=\"https://aurora.tridiamond.tech/zh/guide/\">Aurora 的文档</a>进行配置</p>\n<h4 id=\"3-4-评论区配置\"><a href=\"#3-4-评论区配置\" class=\"headerlink\" title=\"3.4 评论区配置\"></a>3.4 评论区配置</h4><ul>\n<li>Github OAuth Application 申请</li>\n</ul>\n<p>到 <a href=\"https://github.com/settings/applications/new\">https://github.com/settings/applications/new</a> 注册一个OAuth Application，后面的 Gitalk 配置需要用到，Application name 可自定义填写，Homepage URL 填写博客主页地址，Authorization callback URL 填写博客主页地址。</p>\n<img src=\"/post/Github-Pages-Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB/OAuth.jpg\" alt=\"配置界面\" style=\"zoom:50%;\">\n\n\n\n<p>提交后会自动生成一个 <code>ClientID</code>和<code>Client Secret</code>，用于后续的评论区配置</p>\n<hr>\n<p>这个主题目前支持两个不同的评论插件。您可以使用<code>enable</code>配置来打开以下一款评论插件。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>提示</p>\n<p>如果你同时打开了两个插件，<strong>Gitalk</strong>将会优先被使用。博主用的是Gitalk</p></blockquote>\n<ul>\n<li>Gitalk</li>\n</ul>\n<p>配置属性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>enable</code></td>\n<td align=\"left\">使用<strong>true</strong>开启, 使用<strong>false</strong>关闭</td>\n</tr>\n<tr>\n<td align=\"center\"><code>autoExpand</code></td>\n<td align=\"left\">如果设置为<strong>true</strong>, Github 评论将会自动展开。否者默认会收起。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>clientID</code></td>\n<td align=\"left\"><strong>clientID</strong> 是你 GitHub 的 Oauth APP 中提供的。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>clientSecret</code></td>\n<td align=\"left\"><strong>clientSecret</strong> 是你 GitHub 的 Oauth APP 中提供的。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>repo</code></td>\n<td align=\"left\">仓库名, 比如: <a href=\"https://github.com/auroral-ui/**hexo-theme-aurora-docs\">https://github.com/auroral-ui/**hexo-theme-aurora-docs</a>**, 名字就是 <code>hexo-theme-Aurora-docs</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>owner</code></td>\n<td align=\"left\">仓库拥有者的用户名. 比如: <code>auroral-ui</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>admin</code></td>\n<td align=\"left\">仓库管理员的用户名，这里可以填写多个管理员。(也用于标记那个评论是博主的)</td>\n</tr>\n<tr>\n<td align=\"center\"><code>id</code></td>\n<td align=\"left\"><strong>确保唯一性和长度小于 50</strong>，如果您使用<code>pathname</code>，请确保长度小于 50 个字符或使用<code>uid</code>代替，这个有更好的兼容性 (如果您之前使用其他主题，谁用 uid 将可能无法显示您之前的评论)</td>\n</tr>\n<tr>\n<td align=\"center\"><code>language</code></td>\n<td align=\"left\">使用 <code>en </code>设置为英文，使用 <code>cn</code> 设置为中文.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>distractionFreeMode</code></td>\n<td align=\"left\">与 Facebook 一样的专注模式，点击评论输入框时会让背景变暗。<code>true</code> 来开启 <code>false</code> 来关闭</td>\n</tr>\n<tr>\n<td align=\"center\"><code>recentComment</code></td>\n<td align=\"left\">是否开启最近评论功能。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>proxy</code></td>\n<td align=\"left\">GitHub 授权请求的反向代理</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意</p>\n<p>如果你在使用 Gitalk 的时候，出现 403 或者 422 这种报错的话，请根据<a href=\"https://mjava.top/archive/33f09b03-a5a7-4d66-93d3-7063905f9b81/\">这里的教程在新窗口打开</a>，自己搭建一个反向代理服务，然后把你建立好的方向代理地址配置给 <code>proxy</code> 即可。</p></blockquote>\n<p>例子：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">gitalk</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">autoExpand</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">clientID</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">#你在Github申请的ID</span>\n  <span class=\"token key atrule\">clientSecret</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">#你在Github申请的Secret</span>\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">#博客仓库的名称</span>\n  <span class=\"token key atrule\">owner</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ZmStrongest'</span> <span class=\"token comment\">#Github用户名</span>\n  <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ZmStrongest'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#Github用户名</span>\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> uid\n  <span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> cn\n  <span class=\"token key atrule\">distractionFreeMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">recentComment</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token comment\">#proxy: ''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>更多的使用指南请查看 <a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">Gitalk</a> 插件的官网。</p>\n<p>配置完成后，在博客评论区里面登录自己的 <code>github</code> 账号，进行评论区初始化即可使用，由于<code>github</code>站点可能访问较慢，可能要梯子先登录初始化一下才可以使用，博主没用梯子一直都是连接超时，初始化以后就不再需要了。</p>\n<h4 id=\"3-5-机器人配置\"><a href=\"#3-5-机器人配置\" class=\"headerlink\" title=\"3.5 机器人配置\"></a>3.5 机器人配置</h4><p>配置例子直接可以直接复制 <a href=\"https://aurora.tridiamond.tech/zh/guide/\">Aurora 的文档</a> 进行配置</p>\n<h4 id=\"3-6-Github-部署配置\"><a href=\"#3-6-Github-部署配置\" class=\"headerlink\" title=\"3.6 Github 部署配置\"></a>3.6 Github 部署配置</h4><p>上面讲完了主题的配置文件，现在还需要对 Hexo 的原始配置文件 <code>_config.yml</code> 进行配置修改</p>\n<ul>\n<li>配置好<code>github</code>的<code>ssh</code>以后，复制博客在<code>github</code>的仓库地址，并且根据自身情况创建存储博客静态网页内容的分支进行部署提交</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Deployment</span>\n<span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>  <span class=\"token comment\">#github仓库地址</span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master <span class=\"token comment\">#分支名称</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>配置完成后，可以即可通过<code>hexo</code>命令部署到<code>Github Pages</code>上</li>\n</ul>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">hexo deploy \n#或者\nhexo d #简写<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>访问自己之前配置的博客主页地址即可生效，<a href=\"https://zmstrongest.github.io/\">博客地址</a> ，到这里 Github Pages + Hexo + Aurora 主题的配置就完成了，后续有自定义的需求可以自行参照 <code>Hexo</code>和<code>Aurora</code>的文档进行个性化设置。</p>\n<h4 id=\"3-7-文章编写\"><a href=\"#3-7-文章编写\" class=\"headerlink\" title=\"3.7 文章编写\"></a>3.7 文章编写</h4><p>配置完成后，即可开始记录自己的文章了</p>\n<p>你可以执行下列命令来创建一篇新文章或者新的页面。</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">$ hexo new [layout] &lt;title&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。布局（Layout）</p>\n<p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">布局</th>\n<th align=\"left\">路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>post</code></td>\n<td align=\"left\"><code>source/_posts</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>page</code></td>\n<td align=\"left\"><code>source</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>draft</code></td>\n<td align=\"left\"><code>source/_drafts</code></td>\n</tr>\n</tbody></table>\n<ul>\n<li>文件名称</li>\n</ul>\n<p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">变量</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>:title</code></td>\n<td align=\"left\">标题（小写，空格将会被替换为短杠）</td>\n</tr>\n<tr>\n<td align=\"left\"><code>:year</code></td>\n<td align=\"left\">建立的年份，比如， <code>2015</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>:month</code></td>\n<td align=\"left\">建立的月份（有前导零），比如， <code>04</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>:i_month</code></td>\n<td align=\"left\">建立的月份（无前导零），比如， <code>4</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>:day</code></td>\n<td align=\"left\">建立的日期（有前导零），比如， <code>07</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>:i_day</code></td>\n<td align=\"left\">建立的日期（无前导零），比如， <code>7</code></td>\n</tr>\n</tbody></table>\n<ul>\n<li>草稿</li>\n</ul>\n<p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ hexo publish [layout] &lt;title&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>\n","feature":true,"text":"本文将给大家分享个人博客搭建的详细步骤，以及搭建过程中踩到的坑，希望能够帮助大家快速搭建自己的博客，能够记录开发过程中遇到的问题和总结出的经验。 博主选的是 Github Pages + Hexo + Aurora主题，如果是自己有时间和兴趣去写动态网页的博客，需要自己购买服务器...","link":"","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":2,"path":"api/tags/Hexo.json"},{"name":"Github Pages","slug":"Github-Pages","count":2,"path":"api/tags/Github-Pages.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%AB%99%E7%82%B9%E9%80%89%E5%9E%8B\"><span class=\"toc-text\">1.  站点选型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Hexo\"><span class=\"toc-text\">2. Hexo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-npm-%E5%AE%89%E8%A3%85-Hexo\"><span class=\"toc-text\">2.1 npm 安装 Hexo</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.2 主题安装</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E5%88%9B%E5%BB%BA-%E2%80%9CAbout%E2%80%9D-%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">2.3 创建 “About” 页面</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E4%B8%8E%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">2.4 重新生成与本地服务器</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Github-Page-%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3. Github Page 部署配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3.1 配置文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.2 基础配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-%E7%A4%BE%E4%BA%A4%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.3 社交配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-4-%E8%AF%84%E8%AE%BA%E5%8C%BA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.4 评论区配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-5-%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.5 机器人配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-6-Github-%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.6 Github 部署配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-7-%E6%96%87%E7%AB%A0%E7%BC%96%E5%86%99\"><span class=\"toc-text\">3.7 文章编写</span></a></li></ol></li></ol>","author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MarkDown 语法","uid":"25aedc3dbb7bb7b3e9ea75d87387e23e","slug":"MarkDown-语法","date":"2022-08-16T10:01:40.000Z","updated":"2022-08-23T10:44:43.747Z","comments":true,"path":"api/articles/MarkDown-语法.json","keywords":null,"cover":[],"text":"MD 语法总结MD即为MarkDown，MarkDown能够使文章更具有可读性，MarkDown的底层实际上是把内容转化为HTML的富文本展示格式，使文章的内容更加具有层次，结构更加清晰。 1. 标题# H1 ## H2 ### H3 #### H4 ##### H5 #####...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"MarkDown","slug":"MarkDown","count":1,"path":"api/tags/MarkDown.json"},{"name":"MD","slug":"MD","count":1,"path":"api/tags/MD.json"}],"author":{"name":"Mins","slug":"blog-author","avatar":"/image/avatar.jpeg","link":"https://zmstrongest.github.io","description":"Think like an artist, code like an artisan.","socials":{"github":"https://zmstrongest.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}