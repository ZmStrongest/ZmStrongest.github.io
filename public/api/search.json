[{"id":"25aedc3dbb7bb7b3e9ea75d87387e23e","title":"MarkDown 语法","content":"MD 语法总结MD即为MarkDown，MarkDown能够使文章更具有可读性，MarkDown的底层实际上是把内容转化为HTML的富文本展示格式，使文章的内容更加具有层次，结构更加清晰。\n1. 标题# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\n（注意:#号和文字间至少得有一个空格）\n\n同时H1和H2还有另一种写法\n\nH1\n=====\nH2\n-------\n（注意：这里 \"=\" 和 \"-\" 的个数也至少有一个，但要紧随文字下一行）\n\n\n\n\n\n\n\n\n\n\n显示效果\nH1H2H3H4H5H6H1H2\n2. 列表2.1 无序列表无序列表使用星号、加号或是减号（* +  -）作为列表标记\n> 加号\n+ a\n+ b\n+ c\n\n> 减号\n- d\n- e \n- f\n\n> 星号\n* g\n* h\n* i\n\n\n\n\n\n\n\n\n\n\n显示效果\n\na\nb\nc\n\n\nd\ne \nf\n\n\ng\nh\ni\n\n2.2 有序列表有序列表则使用数字接着一个英文句点\n> 有序\n1. abc\n2. bcd\n3. cde\n\n\n\n\n\n\n\n\n\n\n显示效果\n\nabc\nbcd\ncde\n\n2.3 组合使用有序列表与无序列表结合\n> 组合使用\n+ 第一章\n\t+ 1\n\t+ 2\n\t+ 3\n+ 第二章\n+ 第三章\n\n> 有序列表嵌套无序列表\n1. 第一章\n\t1. 1\n\t2. 2\n\t3. 3\n2. 第二章\n\t- a\n\t- b\n3. 第三章\n\n\n\n\n\n\n\n\n\n\n显示效果\n\n第一章\n\n1\n\n\n2\n3\n\n\n第二章\n\n第三章\n\n\n\n第一章\n\n1\n2\n3\n\n\n第二章\n\na\nb\n\n\n第三章\n\n第四章\n\n\n\n3. 文本强调Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 &lt;em&gt; 标签包围，用两个 * 或 _包起来的话，则会被转成 &lt;strong&gt;\n*斜体* _强调_\n**加粗** __加粗__\n***粗斜体*** ___粗斜体___\n~~删除线~~\n\n\n\n\n\n\n\n\n\n\n显示效果\n斜体 强调加粗 加粗粗斜体 粗斜体删除线\n\n4. 代码及区块说明大于号（&gt;），区块说明\n反引号包围（` ），单行代码块\n三个反引号（```+语言），代码块\n> 区块说明\n>> 嵌套\n\n`代码块`\n​``` java\n代码块\n​```\n\n\n\n\n\n\n\n\n\n\n显示效果\n\n\n\n\n\n\n\n\n\n区块说明\n\n嵌套\n\n &lt;html&gt; java &lt;/html&gt;\npublic class Test&#123;\n  public static void main(String[] args)&#123;\n     System.out.println(\"Test\");\n  &#125;\n&#125;\n\n\n5. 链接及图片引用Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。不管是哪一种，链接文字都是用 [方括号] 来标记。\n5.1 行内式只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可\n[百度地址](https://www.baidu.com \"鼠标指向显示描述\")\n显示地址: &lt;https://www.baidu.com>\n\n\n\n\n\n\n\n\n\n\n显示效果\n百度地址\n显示地址: https://www.baidu.com\n5.2 参考式在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记\n[百度首页][id]\n[id]:https://www.baidu.com\n\n\n\n\n\n\n\n\n\n\n显示效果\n百度首页\n\n6. 图片同样分为行内式和参考式\n6.1 行内式和链接的形式差不多，图片的名字放在[]中，图片地址放在随后的()中，title属性（图片地址后面空一格，然后用引号引起来）,注意的是[]前要加上!\n![baidu](https://www.baidu.com/img/baidu_resultlogo@2.png \"url\")\n\n\n\n\n\n\n\n\n\n\n显示效果\n\n6.2 参考式图片的文字放在[]中，图片地址放在随后的:后，title属性（图片地址后面空一格，然后用引号引起来）,注意引用图片的时候在[]前要加上!\n![baidu][logo]\n[logo]: https://www.baidu.com/img/baidu_resultlogo@2.png \"url\"\n\n\n\n\n\n\n\n\n\n\n显示效果\n\n\n7. 分割线分割线可以由* - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以\n---\n- - -\n------\n***\n* * *\n******\n___\n_ _ _\n______\n\n\n\n\n\n\n\n\n\n\n 显示效果\n\n\n\n\n\n\n8. 表格用竖线 |  展示表格，用:的不同位置来改变对齐方式，默认左对齐(:-)，右对齐(-:)，居中对齐(:-:)\n|Head1|Head2|Head3|\n|:-|:-:|-:|\n|abc|bcd|cde|\n|123|234|345|\n|123|234|345|\n|123|234|345|\n|123|234|345|\n|123|234|345|\n\n\n\n\n\n\n\n\n\n\n显示效果\n\n\n\nHead1\nHead2\nHead3\n\n\n\nabc\nbcd\ncde\n\n\n123\n234\n345\n\n\n123\n234\n345\n\n\n123\n234\n345\n\n\n123\n234\n345\n\n\n123\n234\n345\n\n\n9. 目录目录先用中括号 [ ] 显示目录名称，再用小括号 ( ) 保存跳转的id，小括号中 # 号表示 id，和 html 的 id 是一个意思\n#### 目录\n[第一章](#1)\n&lt;h4 id='1'>跳转标题&lt;/h4>\n\n\n\n\n\n\n\n\n\n\n显示效果\n目录第一章\n非跳转标题非跳转标题非跳转标题跳转标题\n\n\n\n\n","slug":"MarkDown-语法","date":"2022-08-16T10:01:40.000Z","categories_index":"","tags_index":"MarkDown,MD","author_index":"Mins"},{"id":"cc25b2c3a520c09e3610684adbe1fa97","title":"Github Pages + Hexo 个人博客搭建分享","content":"本文将给大家分享个人博客搭建的详细步骤，以及搭建过程中踩到的坑，希望能够帮助大家快速搭建自己的博客，能够记录开发过程中遇到的问题和总结出的经验。\n博主选的是 Github Pages + Hexo + Aurora主题，如果是自己有时间和兴趣去写动态网页的博客，需要自己购买服务器和域名比较麻烦，还是比较推荐直接用现成静态网页去做比较好，省时省力也省钱，也能满足绝大部分功能了\n准备工作: Node.js  Git 搭建博客依赖的环境\nHexo Doc: https://hexo.io/zh-cn/docs/\n1.  站点选型\n\n\n\n\n\n\n\n\nGithub Pages\n​        由于Github是国外站点，没有梯子时不时都会抽风，但Github有个好处是申请Github Pages不需要上传自己身份证信息(我就是因为太懒不想上传哈哈)，如果不想折腾，能接受有时候蜗牛一样的访问速度，推荐使用Github Pages。下面是Github Pages的整合步骤。\n\n创建 Github 仓库\n\n\n看网上大部分文章都说仓库名命名如果是 {github用户名}.github.io ，仓库就会自动开启 github pages，仓库名直接用github用户名好像也可以(可以试试)，这样访问github pages的时候域名直接就可以用 {github用户名}.github.io 访问，否则就要在域名后面加上仓库名称才能访问自己的博客\n\n设置 github pages\n\n\n\n如果是用用户名创建了仓库，直接访问上述的域名即可，如果是自己有申请独立域名，可以在下方的 Custom domain设置自定义域名\n\n同时可以选择自己编译后的静态网页部署在哪个分支，可以在 Branch 选项设置分支，以及保存的根目录路径\n\n\n\n\n\n\n\n\n\n\n\nGitee Pages\n​        Gitee Pages 其实和 Github Pages 的区别不大，博主本来也是打算用 Gitee 来搭建的，但是之前没有现成的身份证正反面以及手持身份证的照片，就没选择这种方式。\n\n创建 Gitee 仓库\n\n\n和 Github 一样，以用户名作为仓库的名称，创建一个存放静态网页文件的仓库\n\n开启 Gitee Pages 功能\n\n在 服务 菜单里面开启 Gitee Page 功能，如果之前没有做过实名认证，是需要上传身份证资料的，根据自己的情况选择是不是要上传，不实名认证是无法开启这个功能的\n\n\n2. Hexo\n\n\n\n\n\n\n\n\n安装步骤\nHexo 利用 Node.js 和  NPM 安装比较方便，在安装前需前往 Node.js 官网先安装好环境，同时需要安装 Git\n2.1 npm 安装 Hexo在自己的项目目录里面创建一个文件夹用来保存 Hexo 项目，安装好 Node npm 和 Git 环境后，执行安装命令\nnpm install hexo --save\n\n执行完成后可以执行命令查看版本，执行看到有 hexo-cli 的版本号就说明成功安装了\nhexo -version\n\n安装 hexo git 的插件\n npm install hexo-deployer-git --save\n\n初始化 hexo 项目，后面上传的文件夹就是初始化后的目录\nhexo init &lt;要创建的目录名称>\n\n进入到刚才创建的项目目录里面,安装所有依赖的包\nnpm install\n\n安装完成后，可以看到目录结构如下图\n\n执行以下 hexo 的命令，即可在本地生成静态网页文件并运行\n#清空hexo所有已经生成的静态网页文件，如果修改了 yaml 配置文件一定要先执行此命令清空\nhexo clean \n#也可以简写成\nhexo cl\n\n执行完清理命令后，需要执行生成静态网页文件的命令\n#生成静态网页文件\nhexo generate\n#也可以简写成\nhexo g\n\n生成完成后，可以现在本地运行，运行成功后访问 https://localhost:4000 访问本地博客，也可以指定运行的端口，看自己需求\n#不指定端口运行，默认4000端口启动\nhexo server\n#也可以简写成\nhexo s\n#如果需要指定端口，则执行以下命令\nhexo server -p 8000\n#简写也是可以的\nhexo s -p 8000\n\n2.2 主题安装默认的主题是真的很默认，可以自行到 Hexo 官网的主题库中挑选自己喜欢的主题，我选的是三钻的 Aurora 主题，能用 npm 安装而且有自己的主题文档，十分方便，而且确实很好看，第一眼就被吸引了。\nHexo 主题库: https://hexo.io/themes/\nAurora Doc: https://aurora.tridiamond.tech/zh/guide/\n下面我以 Aurora 为例安装主题，可能有部分主题不支持 npm 安装，需要手动保存文件夹再做处理，具体可以根据选择的主题文档完成安装操作\n\n在控制台中，进入 Hexo 项目的根目录，执行主题安装命令\n\nnpm install hexo-theme-aurora --save\n\n\n因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个 _config.aurora.yml 配置文件来配置主题\n\n#命令 windows powershell 不支持，需自行在 下面的路径中找到文件后直接复制\ncp -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml\n\n\n设置 permalink\n\n因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与我们 Vue router 中的 path 是不相符的，那么就会出现无法访问的问题。所以我们需要修改 Hexo 默认配置文件里面的 permalink 参数。\n\n打开 Hexo 根目录下的 _config.yml\n\n修改 permalink 参数为  /post/:title.html\nurl: https://tridiamond.tech\npermalink: /post/:title.html #更改这个参数\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n设置代码高亮\n\n\n最后主题是使用 Prismjs 来实现代码高亮显示，但 Hexo 默认是使用 highlightjs，因此你需要更改 Hexo 配置来使用 Prismjs\n\n把 highlight 的启用改为false\n\n把 prismjs 的启用改为true\n\n把 prismjs 下的 preprocess 改为 false\n\n\nhighlight:\n  enable: false #第一步\n  line_number: true\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true #第二部\n  preprocess: true #第三部\n  line_number: true\n  tab_replace: ''\n\n2.3 创建 “About” 页面主题默认开启了 about 页面，所以我们需要创建这个 about 页，要不主题就无法正常显示 about 页。\n要创建这个默认的 about 页，文档里面写的那个命令执行不了，不知道是不是版本问题，执行下面这个 Hexo 的命令：\nhexo create page about #主题文档写的这个我执行不了，提示无此命令\n\nhexo new page about #执行这个，新建页面布局about\n\n执行完毕后，你会发现在 source/ 文件中多处了一个新的文件夹：\n.\n└── source\n    └── about\n        └── index.md\n\n你可以随意修改这个 index.md markdown 文件中的内容，此文件的内容将会现在在我们的 about 页面中。\n\n由于无法执行文档中 create page 的命令，因此还需要多加一步，否则跳转到 About 页面后点击刷新，是会出现访问404的情况(new pages是hexo的命令，上面的命令估计是作者封装的，那几个默认页面的原理应该也是读取的type参数)\n\n找到 _source/about/index.md，在文件头上面增加一个type参数，表示它是一个跳转页面，这样就不会出现刷新404的情况了。\n---\ntitle: 关于\ndate: 2022-08-15 18:28:35\ntype: about #增加这个参数\n---\n\n不增加的效果:\n增加后的效果:\n","slug":"Github-Pages-Hexo-个人博客搭建分享","date":"2022-08-16T09:11:11.000Z","categories_index":"","tags_index":"Hexo,Github Pages","author_index":"Mins"}]